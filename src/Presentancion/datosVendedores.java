/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentancion;

import logica.servicios.VendedorServicios;
import logica.Clases.Vendedor;

import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author UnwantedOpinion
 */
public class datosVendedores extends javax.swing.JFrame {

    /**
     * Creates new form datosVendedores
     */
     public datosVendedores() {
        initComponents();
        this.setLocationRelativeTo(null);
        cargarDatos();//llama al método para llenar la tabla
       
        //manejamos el evento de cierre de la ventana
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                //codigo que se ejecuta al cerrar la ventana
                manejoCiereVentana();
            }
        });
    }
     
    private void manejoCiereVentana() {
       //cierra la ventana actual (datosVendedores)
       this.dispose();
    }
    
    public void cargarDatos() {
        VendedorServicios vendedorServicios = new VendedorServicios();
        ArrayList<Vendedor> vendedores = vendedorServicios.listarVendedores();

        //obtenemos el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tblListarVendedores.getModel();
        
        //limpiamos la tabla antes de agregar los nuevos datos
        modelo.setRowCount(0);

        //agregamos filas a la tabla
        for (Vendedor vendedor : vendedores) {
            modelo.addRow(new Object[]{
                vendedor.getId(),
                vendedor.getNombre(),
                vendedor.getCedula(),
                vendedor.getCorreo(),
                vendedor.getTelefono(),
                vendedor.getDireccion(),
                vendedor.getFechaContratacion()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblListarVendedores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAltaVendedor1 = new javax.swing.JButton();
        btnModVendedor = new javax.swing.JButton();
        btnElimVendedor = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblListarVendedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Cedula", "Correo Electronico", "Telefono", "Dirección", "Fecha de Contratacion"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListarVendedores);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("TABLA DE VENDEDORES");

        btnAltaVendedor1.setText("Añadir Vendedor");
        btnAltaVendedor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaVendedor1ActionPerformed(evt);
            }
        });

        btnModVendedor.setText("Modificar Vendedor");
        btnModVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModVendedorActionPerformed(evt);
            }
        });

        btnElimVendedor.setText("Eliminar Vendedor");
        btnElimVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimVendedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(btnAltaVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(btnModVendedor)
                .addGap(103, 103, 103)
                .addComponent(btnElimVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 79, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(280, 280, 280))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAltaVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnElimVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAltaVendedor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaVendedor1ActionPerformed
        //crea una nueva instancia de la ventana aniadirVendedor
        aniadirVendedor ventanaAniadirVendedor = new aniadirVendedor();
    
        //hace que la ventana sea visible
        ventanaAniadirVendedor.setVisible(true);
        
        //agregamos un listener para la ventana al cerrar
        ventanaAniadirVendedor.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                cargarDatos();//actualizamos la tabla cuando se cierra la ventana
            }
        });
    }//GEN-LAST:event_btnAltaVendedor1ActionPerformed

    private void btnModVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModVendedorActionPerformed
        int filaSeleccionada = tblListarVendedores.getSelectedRow();

    if (filaSeleccionada >= 0) {
        int id = (Integer) tblListarVendedores.getValueAt(filaSeleccionada, 0);
        String nombre = (String) tblListarVendedores.getValueAt(filaSeleccionada, 1);
        int cedula = (Integer) tblListarVendedores.getValueAt(filaSeleccionada, 2);
        String correo = (String) tblListarVendedores.getValueAt(filaSeleccionada, 3);
        String telefono = (String) tblListarVendedores.getValueAt(filaSeleccionada, 4);
        String direccion = (String) tblListarVendedores.getValueAt(filaSeleccionada, 5);

        int confirmacion = JOptionPane.showConfirmDialog(this, 
                "¿Está seguro de que desea modificar este vendedor?", 
                "Confirmar Modificación", 
                JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {
            modificarVendedor ventanaModificacion = new modificarVendedor();
            ventanaModificacion.setId(id);
            ventanaModificacion.setNombre(nombre);
            ventanaModificacion.setCedula(cedula);
            ventanaModificacion.setCorreo(correo);
            ventanaModificacion.setTelefono(telefono);
            ventanaModificacion.setDireccion(direccion);
            ventanaModificacion.setVisible(true);

            ventanaModificacion.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent e) {
                    cargarDatos(); //actualiza la tabla después de cerrar la ventana de modificación
                }
            });
        }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe seleccionar un vendedor para modificar.");
        }
    }//GEN-LAST:event_btnModVendedorActionPerformed

    private void btnElimVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimVendedorActionPerformed
        int selectedRow = tblListarVendedores.getSelectedRow();
    
        if (selectedRow >= 0) {
            int id = (Integer) tblListarVendedores.getValueAt(selectedRow, 0);

            int confirm = JOptionPane.showConfirmDialog(this, 
                    "¿Está seguro de que desea eliminar este vendedor?", 
                    "Confirmar Eliminación", 
                    JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                VendedorServicios servicios = new VendedorServicios();
                boolean exito = servicios.eliminarVendedor(id);

                if (exito) {
                    JOptionPane.showMessageDialog(this, 
                            "Vendedor eliminado exitosamente.", 
                            "Éxito", 
                            JOptionPane.INFORMATION_MESSAGE);
                    cargarDatos();
                } else {
                    JOptionPane.showMessageDialog(this, 
                            "Error al eliminar el vendedor.", 
                            "Error", 
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, 
                    "Debe seleccionar un vendedor para eliminar.", 
                    "Advertencia", 
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnElimVendedorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(datosVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(datosVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(datosVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(datosVendedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new datosVendedores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAltaVendedor1;
    private javax.swing.JButton btnElimVendedor;
    private javax.swing.JButton btnModVendedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblListarVendedores;
    // End of variables declaration//GEN-END:variables
}
