/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Presentancion;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import logica.Clases.Cliente;
import logica.Controladores.ControladorCliente;
import logica.servicios.ClienteServicios;

/**
 *
 * @author Jairo
 */
public class ClientesPrincipal extends javax.swing.JPanel {

    /**
     * Creates new form Clientes
     */
    public ClientesPrincipal() {
        initComponents();
        actualizarTablaClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnModificarCliente = new javax.swing.JButton();
        btnEliminarcliente = new javax.swing.JButton();
        btnAltaCliente2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnRecargar = new javax.swing.JButton();

        btnModificarCliente.setBackground(new java.awt.Color(0, 51, 204));
        btnModificarCliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificarCliente.setText("Modificar");
        btnModificarCliente.setEnabled(false);
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });

        btnEliminarcliente.setBackground(new java.awt.Color(255, 0, 0));
        btnEliminarcliente.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminarcliente.setText("Eliminar");
        btnEliminarcliente.setEnabled(false);
        btnEliminarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarclienteActionPerformed(evt);
            }
        });

        btnAltaCliente2.setBackground(new java.awt.Color(0, 204, 0));
        btnAltaCliente2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAltaCliente2.setText("Alta");
        btnAltaCliente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltaCliente2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("LISTADO DE CLIENTES");

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Telefono", "Correo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaClientes.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tablaClientesAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tablaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaClientesMouseClicked(evt);
            }
        });
        tablaClientes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tablaClientesPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        btnRecargar.setBackground(new java.awt.Color(0, 255, 255));
        btnRecargar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRecargar.setText("Recargar");
        btnRecargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnAltaCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnEliminarcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnRecargar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAltaCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        // Verificar que se haya seleccionado una fila en la tabla
        int filaSeleccionada = tablaClientes.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un cliente para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Obtener el RUT de la columna correspondiente (ej. columna 0)
        int rut = (int) tablaClientes.getValueAt(filaSeleccionada, 0);

        // Abrir el formulario de modificación y pasar el RUT
        try {
            ClientesModificar frameClientesModificar = new ClientesModificar();
            frameClientesModificar.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Error al abrir el formulario: " + e.getMessage());
        }
    }//GEN-LAST:event_btnModificarClienteActionPerformed

    private void btnEliminarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarclienteActionPerformed
        // TODO add your handling code here:
        System.out.println("Botón modificar clickeado");
        int selectedRow = tablaClientes.getSelectedRow();
    
        if (selectedRow != -1) {
            // Obtener el RUT del cliente seleccionado
            int rutCliente = (int) tablaClientes.getValueAt(selectedRow, 0); // Asumiendo que la columna 0 es el RUT

            // Mostrar cuadro de confirmación
            int confirmacion = JOptionPane.showConfirmDialog(this, "¿Estás seguro de que deseas eliminar al cliente con RUT: " + rutCliente + "?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirmacion == JOptionPane.YES_OPTION) {
                // Llamar al método para eliminar al cliente
                ClienteServicios servicio = new ClienteServicios();
                if(servicio.eliminarCliente(rutCliente)) {
                    // Refrescar la tabla de clientes
                    //cargarDatosEnTabla();
                    JOptionPane.showMessageDialog(this, "Cliente eliminado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        actualizarTablaClientes();
    }//GEN-LAST:event_btnEliminarclienteActionPerformed

    private void btnAltaCliente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltaCliente2ActionPerformed
    JFrame frame = new JFrame("Alta Clientes");
    
    // Configurar el cierre de la ventana al cerrar la ventana de clientes
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    
    // Crear una instancia de tu JPanel ClientesPrincipal
    ClientesAlta panelClientesAlta = new ClientesAlta();
    
    // Agregar el JPanel al JFrame
    frame.add(panelClientesAlta);
    
    // Configurar el tamaño del JFrame
    frame.setSize(500, 600); // Ajusta el tamaño según sea necesario
    
    // Centrar la ventana en la pantalla
    frame.setLocationRelativeTo(null);
    
    // Hacer visible la ventana
    frame.setVisible(true);
    }//GEN-LAST:event_btnAltaCliente2ActionPerformed

    private void tablaClientesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tablaClientesAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaClientesAncestorAdded

    private void tablaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaClientesMouseClicked
        // TODO add your handling code here:
        // Habilitar el botón de eliminar si se selecciona una fila
        if (tablaClientes.getSelectedRow() != -1) {
            btnEliminarcliente.setEnabled(true);
            btnModificarCliente.setEnabled(true);
        } else {
            btnEliminarcliente.setEnabled(false);
            btnModificarCliente.setEnabled(false);
        }
        

    
    }//GEN-LAST:event_tablaClientesMouseClicked


    private void actualizarTablaClientes() {
    // Obtener la instancia del controlador
    ControladorCliente controlador = ControladorCliente.getInstance();
    // Obtener el modelo actualizado
    DefaultTableModel modeloTabla = controlador.cargarDatosEnTabla();
    // Asignar el modelo a la tabla
    tablaClientes.setModel(modeloTabla);
}

    private void tablaClientesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tablaClientesPropertyChange
        
    }//GEN-LAST:event_tablaClientesPropertyChange

    private void btnRecargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecargarActionPerformed
        // TODO add your handling code here:
        actualizarTablaClientes();
    }//GEN-LAST:event_btnRecargarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAltaCliente2;
    private javax.swing.JButton btnEliminarcliente;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnRecargar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
